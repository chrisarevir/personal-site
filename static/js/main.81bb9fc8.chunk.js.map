{"version":3,"sources":["assets/forest-background.jpg","assets/avatar_image.jpg","utils/serviceWorker.ts","components/Header.tsx","components/Forest.tsx","components/Gradient.tsx","components/Avatar.tsx","components/Icons.tsx","components/Card.tsx","components/H1.tsx","components/Typography.tsx","components/ProfileCard.tsx","components/AboutCard.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","Header","styled","header","BackgroundImage","img","Forest","src","forest","alt","Gradient","div","Container","span","Image","Avatar","avatar","ul","Row","li","Icon","a","Icons","className","href","Card","section","state","css","AnimatedCard","children","React","useState","animate","setAnimate","useEffect","setTimeout","Transition","in","timeout","H1","h1","TextAlignLeft","P","p","ProfileCard","About","rel","target","Site","to","exact","path","AboutCard","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81bb9fc8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/forest-background.ec74f90b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/avatar_image.7381fbdf.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import styled from 'styled-components';\n\nconst Header = styled.header`\n  align-items: center;\n  justify-content: flex-start;\n  background: rgba(0, 0, 0, 0.5);\n  color: white;\n  display: flex;\n  height: 3em;\n  position: absolute;\n  width: 100vw;\n  z-index: 3;\n  padding: 0 2em;\n\n  a {\n    color: white;\n    text-decoration: none;\n\n    &:hover {\n      text-decoration: none;\n    }\n  }\n\n  a + a {\n    margin-left: 20px;\n  }\n\n  @media (max-width: 450px) {\n    bottom: 0;\n  }\n`;\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\nimport forest from '../assets/forest-background.jpg';\n\nconst BackgroundImage = styled.img`\n  height: 100vh;\n  width: 100vw;\n  object-fit: cover;\n  position: absolute;\n  z-index: 0;\n`;\n\nconst Forest: React.FC = () => {\n  return <BackgroundImage src={forest} alt=\"forest\" />;\n};\n\nexport default Forest;\n","import styled from 'styled-components';\n\nconst Gradient = styled.div`\n  background: linear-gradient(90deg, #fc466b 0%, #3f5efb 100%);\n  height: 100vh;\n  opacity: 0.2;\n  width: 100vw;\n  position: absolute;\n  z-index: 1;\n`;\n\nexport default Gradient;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport avatar from '../assets/avatar_image.jpg';\n\nconst Container = styled.span`\n  display: block;\n  margin-bottom: 1.5em;\n  position: relative;\n\n  &::before {\n    background: #c8cccf;\n    content: '';\n    display: block;\n    height: 1px;\n    left: -3em;\n    position: absolute;\n    top: 50%;\n    width: calc(100% + 6em);\n    z-index: -1;\n  }\n`;\n\nconst Image = styled.img`\n  border-radius: 100%;\n  box-shadow: 0 0 0 1.5em #ffffff;\n  display: block;\n  height: 122px;\n  margin: 0 auto;\n  width: 122px;\n`;\n\nconst Avatar: React.FC = () => {\n  return (\n    <Container>\n      <Image src={avatar} alt=\"profile photo for Christian Rivera\" />\n    </Container>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.ul`\n  cursor: default;\n  list-style: none;\n  margin-top: -0.675em;\n  margin: 0 0 1.5em 0;\n  padding-left: 0;\n`;\n\nconst Row = styled.li`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  padding: 0 0.5em;\n  width: 100%;\n`;\n\nconst Icon = styled.a`\n  border-radius: 100%;\n  border: solid 1px #c8cccf;\n  color: inherit;\n  display: block;\n  height: 3.75em;\n  line-height: 3.75em;\n  margin-top: 0.675em;\n  overflow: hidden;\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  text-indent: 3.75em;\n  transition: color 0.2s ease, border-color 0.2s ease;\n  white-space: nowrap;\n  width: 3.75em;\n\n  &:hover {\n    border-color: #ff7496;\n\n    &::before {\n      text-shadow: 1.25px 0px 0px #ff7496, -1.25px 0px 0px #ff7496,\n        0px 1.25px 0px #ff7496, 0px -1.25px 0px #ff7496;\n    }\n  }\n\n  &::before {\n    font-size: 1.85rem;\n    height: inherit;\n    left: 0;\n    line-height: inherit;\n    position: absolute;\n    text-align: center;\n    text-indent: 0;\n    top: 0;\n    transition: color 0.2s ease, border-color 0.2s ease;\n    width: inherit;\n\n    color: #ffffff;\n    text-shadow: 1.25px 0px 0px #c8cccf, -1.25px 0px 0px #c8cccf,\n      0px 1.25px 0px #c8cccf, 0px -1.25px 0px #c8cccf;\n  }\n`;\n\nconst Icons: React.FC = () => {\n  return (\n    <Container>\n      <Row>\n        <Icon\n          className=\"fab fa-github\"\n          href=\"https://github.com/chrisarevir/\"\n        />\n        <Icon\n          className=\"fab fa-instagram\"\n          href=\"https://www.instagram.com/chrisarevir/\"\n        />\n        <Icon\n          className=\"fab fa-twitter\"\n          href=\"https://twitter.com/chrisarevir\"\n        />\n        <Icon\n          className=\"fab fa-linkedin\"\n          href=\"https://www.linkedin.com/in/chrisarevir/\"\n        />\n      </Row>\n    </Container>\n  );\n};\n\nexport default Icons;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { Transition } from 'react-transition-group';\nimport { TransitionStatus } from 'react-transition-group/Transition';\n\nconst Card = styled.section<{ state?: TransitionStatus }>`\n  background: #ffffff;\n  border-radius: 10px;\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.3);\n  cursor: default;\n  left: 50%;\n  max-width: 100%;\n  padding: 4.5em 3em 3em 3em;\n  position: absolute;\n  text-align: center;\n  top: 50%;\n  transform-origin: 50% 50%;\n  transition: opacity 1s ease, transform 1s ease;\n  min-width: 27em;\n  z-index: 2;\n\n  opacity: ${({ state }) =>\n    state === 'entering' || state === 'entered' ? 0 : 1};\n  transform: translateX(-50%) translateY(-50%)\n    rotateX(\n      ${({ state }) => {\n        if (state === 'entering' || state === 'entered') {\n          return 15;\n        }\n\n        return 0;\n      }}deg\n    )\n    rotateY(\n      ${({ state }) => {\n        if (state === 'exiting' || state === 'exited') {\n          return 0;\n        }\n        return 90;\n      }}deg\n    );\n\n  ${({ state }) => {\n    if (state === 'exiting') {\n      return css`\n        transform: rotateY(180deg);\n      `;\n    }\n  }}\n\n  @media (max-width: 450px) {\n    bottom: 48px;\n    left: 0;\n    max-height: calc(100vh - 108px);\n    min-width: 0;\n    overflow: auto;\n    top: unset;\n    transform-origin: unset;\n    transform: unset;\n  }\n`;\n\nconst AnimatedCard: React.FC = ({ children }) => {\n  const [animate, setAnimate] = React.useState(true);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      setAnimate(false);\n    }, 100);\n  }, []);\n\n  return (\n    <Transition in={animate} timeout={0}>\n      {(state) => {\n        return <Card state={state}>{children}</Card>;\n      }}\n    </Transition>\n  );\n};\n\nexport default AnimatedCard;\n","import styled from 'styled-components';\n\nconst H1 = styled.h1`\n  color: #313f47;\n  font-size: 1.85em;\n  letter-spacing: 0.22em;\n  line-height: 1.5;\n  margin: 0 0 0.525em 0;\n`;\n\nexport default H1;\n","import styled from 'styled-components';\n\nexport const TextAlignLeft = styled.span`\n  text-align: left;\n`;\n\nexport const P = styled.p`\n  margin: 0 0 1.5em 0;\n  line-height: 1.5em;\n\n  & + & {\n    margin-top: 1.5em;\n  }\n`;\n","import React from 'react';\n\nimport Avatar from '../components/Avatar';\nimport Icons from '../components/Icons';\nimport Card from '../components/Card';\nimport H1 from '../components/H1';\nimport { P } from '../components/Typography';\n\nconst ProfileCard: React.FC = () => {\n  return (\n    <Card>\n      <header>\n        <Avatar />\n        <H1>Christian Rivera</H1>\n        <P>Senior Web Developer</P>\n      </header>\n      <footer>\n        <Icons />\n      </footer>\n    </Card>\n  );\n};\n\nexport default ProfileCard;\n","import React from 'react';\n\nimport Card from './Card';\nimport H1 from './H1';\nimport { P, TextAlignLeft } from './Typography';\n\nconst About: React.FC = () => {\n  // TODO: make animation for hey hi hello to slide, spin, and slam in\n  return (\n    <Card>\n      <H1>About Me</H1>\n\n      <TextAlignLeft>\n        <P>Heyhihello!</P>\n        <P>\n          I've always been one to tinker with everything, and the web is my\n          current playground of choice. My career has brought me from mobile\n          work, through backend, and is currently focused on frontend web work.\n          Tending to not wait for permission or tipping points to fix things,\n          and paraphrasing Kent Metz, I make the hard changes easy, then make\n          easy changes.\n        </P>\n\n        <P>\n          Presently, my full time job focuses on creating and maintaining a\n          reusable library of components / utilities, as well as acting as a\n          Jack-of-All-Trades resource on various frontend arcanas. I tend to\n          pick out the right tool for the job rather after some research rather\n          than the one that has the most hype. I act as technical support,\n          provide guidance and mentorship for new hires and interns, and code\n          like Hamilton writes (\n          <a\n            href=\"https://www.youtube.com/watch?v=q9iLfPP4Ps8\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            non-stop\n          </a>\n          ).\n        </P>\n\n        <P>\n          While limited by the current pandemic, I usually balance this out by\n          going / flying to various social dancing events (Lindy Hop, Balboa,\n          East Coast Swing, Line Dancing), and I have performed in various hip\n          hop / swing dancing shows in and around the LA area!\n        </P>\n      </TextAlignLeft>\n    </Card>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/reset.css';\nimport * as serviceWorker from './utils/serviceWorker';\n\nimport Header from './components/Header';\nimport Forest from './components/Forest';\nimport Gradient from './components/Gradient';\nimport ProfileCard from './components/ProfileCard';\nimport AboutCard from './components/AboutCard';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nconst Site = () => {\n  return (\n    <Router>\n      <Header>\n        <Link to=\"/personal-site\">Home</Link>\n        <Link to=\"/about\">About</Link>\n      </Header>\n\n      <Forest />\n      <Gradient />\n\n      <Switch>\n        <Route exact path=\"/personal-site\">\n          <ProfileCard />\n        </Route>\n\n        <Route exact path=\"/about\">\n          <AboutCard />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nReactDOM.render(<Site />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}