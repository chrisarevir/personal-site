{"version":3,"sources":["assets/avatar_image.jpg","components/Forest.tsx","components/Gradient.tsx","components/Avatar.tsx","components/Icons.tsx","components/ProfileCard.tsx","pages/Landing.tsx","utils/serviceWorker.ts","index.tsx","assets/forest-background.jpg"],"names":["module","exports","BackgroundImage","styled","img","Forest","src","forest","Gradient","div","Container","span","Image","Avatar","avatar","ul","Row","li","Icon","a","Icons","className","href","section","state","Name","h1","Title","p","ProfileCard","props","AnimatedProfileCard","React","useState","animate","setAnimate","useEffect","setTimeout","Transition","in","timeout","Landing","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,0C,gVCI3C,IAAMC,EAAkBC,IAAOC,IAAV,KAYNC,EAJU,WACvB,OAAO,kBAACH,EAAD,CAAiBI,IAAKC,O,kOCX/B,IASeC,EATEL,IAAOM,IAAV,K,ykBCGd,IAAMC,EAAYP,IAAOQ,KAAV,KAkBTC,EAAQT,IAAOC,IAAV,KAiBIS,EARU,WACvB,OACE,kBAACH,EAAD,KACE,kBAACE,EAAD,CAAON,IAAKQ,Q,42CChClB,IAAMJ,EAAYP,IAAOY,GAAV,KAQTC,EAAMb,IAAOc,GAAV,KAOHC,EAAOf,IAAOgB,EAAV,KAoEKC,EAzBS,WACtB,OACE,kBAAC,EAAD,KACE,kBAACJ,EAAD,KACE,kBAACE,EAAD,CACEG,UAAU,gBACVC,KAAK,oCAEP,kBAACJ,EAAD,CACEG,UAAU,mBACVC,KAAK,2CAEP,kBAACJ,EAAD,CACEG,UAAU,iBACVC,KAAK,oCAEP,kBAACJ,EAAD,CACEG,UAAU,kBACVC,KAAK,gD,0yBCvEf,IAAMZ,EAAYP,IAAOoB,QAAV,KAgBF,gBAAGC,EAAH,EAAGA,MAAH,MACC,aAAVA,GAAkC,YAAVA,EAAsB,EAAI,KAG9C,gBAAGA,EAAH,EAAGA,MAAH,MACU,aAAVA,GAAkC,YAAVA,EAAsB,GAAK,KAIrDC,EAAOtB,IAAOuB,GAAV,KAQJC,EAAQxB,IAAOyB,EAAV,KAQLC,EAA0C,SAAC,GAAkB,IAAbC,EAAY,oBAChE,OACE,kBAAC,EAAcA,EACb,gCACE,kBAAC,EAAD,MACA,kBAACL,EAAD,yBACA,kBAACE,EAAD,8BAEF,gCACE,kBAAC,EAAD,UAwBOI,EAlBuB,WAAO,IAAD,EACZC,IAAMC,UAAS,GADH,mBACnCC,EADmC,KAC1BC,EAD0B,KAS1C,OANAH,IAAMI,WAAU,WACdC,YAAW,WACTF,GAAW,KACV,OACF,IAGD,kBAACG,EAAA,EAAD,CAAYC,GAAIL,EAASM,QAAS,IAC/B,SAAAhB,GACC,OAAO,kBAAC,EAAD,CAAaA,MAAOA,QCzDpBiB,EAVW,WACxB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAAaC,SAASC,eAAe,SDiI/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBE1InBxD,EAAOC,QAAU,IAA0B,gD","file":"static/js/main.7d0d78a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar_image.7381fbdf.jpg\";","import React from 'react';\nimport styled from 'styled-components';\nimport forest from '../assets/forest-background.jpg';\n\nconst BackgroundImage = styled.img`\n  height: 100vh;\n  width: 100vw;\n  object-fit: cover;\n  position: absolute;\n  z-index: 0;\n`;\n\nconst Forest: React.FC = () => {\n  return <BackgroundImage src={forest} />;\n};\n\nexport default Forest;\n","import styled from 'styled-components';\n\nconst Gradient = styled.div`\n  background: linear-gradient(90deg, #fc466b 0%, #3f5efb 100%);\n  height: 100vh;\n  opacity: 0.2;\n  width: 100vw;\n  position: absolute;\n  z-index: 1;\n`;\n\nexport default Gradient;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport avatar from '../assets/avatar_image.jpg';\n\nconst Container = styled.span`\n  display: block;\n  margin-bottom: 1.5em;\n  position: relative;\n\n  &::before {\n    background: #c8cccf;\n    content: '';\n    display: block;\n    height: 1px;\n    left: -3em;\n    position: absolute;\n    top: 50%;\n    width: calc(100% + 6em);\n    z-index: -1;\n  }\n`;\n\nconst Image = styled.img`\n  border-radius: 100%;\n  box-shadow: 0 0 0 1.5em #ffffff;\n  display: block;\n  height: 122px;\n  margin: 0 auto;\n  width: 122px;\n`;\n\nconst Avatar: React.FC = () => {\n  return (\n    <Container>\n      <Image src={avatar} />\n    </Container>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.ul`\n  cursor: default;\n  list-style: none;\n  margin-top: -0.675em;\n  margin: 0 0 1.5em 0;\n  padding-left: 0;\n`;\n\nconst Row = styled.li`\n  display: flex;\n  justify-content: space-around;\n  padding: 0.675em 0.5em;\n  width: 100%;\n`;\n\nconst Icon = styled.a`\n  color: inherit;\n  border-radius: 100%;\n  border: solid 1px #c8cccf;\n  display: block;\n  height: 3.75em;\n  line-height: 3.75em;\n  overflow: hidden;\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  text-indent: 3.75em;\n  transition: color 0.2s ease, border-color 0.2s ease;\n  white-space: nowrap;\n  width: 3.75em;\n\n  &:hover {\n    border-color: #ff7496;\n\n    &::before {\n      text-shadow: 1.25px 0px 0px #ff7496, -1.25px 0px 0px #ff7496,\n        0px 1.25px 0px #ff7496, 0px -1.25px 0px #ff7496;\n    }\n  }\n\n  &::before {\n    font-size: 1.85rem;\n    height: inherit;\n    left: 0;\n    line-height: inherit;\n    position: absolute;\n    text-align: center;\n    text-indent: 0;\n    top: 0;\n    transition: color 0.2s ease, border-color 0.2s ease;\n    width: inherit;\n\n    color: #ffffff;\n    text-shadow: 1.25px 0px 0px #c8cccf, -1.25px 0px 0px #c8cccf,\n      0px 1.25px 0px #c8cccf, 0px -1.25px 0px #c8cccf;\n  }\n`;\n\nconst Icons: React.FC = () => {\n  return (\n    <Container>\n      <Row>\n        <Icon\n          className=\"fab fa-github\"\n          href=\"https://github.com/chrisarevir/\"\n        />\n        <Icon\n          className=\"fab fa-instagram\"\n          href=\"https://www.instagram.com/chrisarevir/\"\n        />\n        <Icon\n          className=\"fab fa-twitter\"\n          href=\"https://twitter.com/chrisarevir\"\n        />\n        <Icon\n          className=\"fab fa-linkedin\"\n          href=\"https://www.linkedin.com/in/chrisarevir/\"\n        />\n      </Row>\n    </Container>\n  );\n};\n\nexport default Icons;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Transition } from 'react-transition-group';\n\nimport Avatar from '../components/Avatar';\nimport Icons from '../components/Icons';\nimport { TransitionStatus } from 'react-transition-group/Transition';\n\nconst Container = styled.section<{ state?: TransitionStatus }>`\n  background: #ffffff;\n  border-radius: 10px;\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.3);\n  cursor: default;\n  left: 50%;\n  max-width: 100%;\n  padding: 4.5em 3em 3em 3em;\n  position: absolute;\n  text-align: center;\n  top: 50%;\n  transform-origin: 50% 50%;\n  transition: opacity 1s ease, transform 1s ease;\n  width: 27em;\n  z-index: 2;\n\n  opacity: ${({ state }) =>\n    state === 'entering' || state === 'entered' ? 0 : 1};\n  transform: translateX(-50%) translateY(-50%)\n    rotateX(\n      ${({ state }) =>\n        state === 'entering' || state === 'entered' ? 15 : 0}deg\n    );\n`;\n\nconst Name = styled.h1`\n  color: #313f47;\n  font-size: 1.85em;\n  letter-spacing: 0.22em;\n  line-height: 1.5;\n  margin: 0 0 0.525em 0;\n`;\n\nconst Title = styled.p`\n  margin: 0 0 1.5em 0;\n`;\n\ninterface ProfileCardProps {\n  state?: TransitionStatus;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps> = ({ ...props }) => {\n  return (\n    <Container {...props}>\n      <header>\n        <Avatar />\n        <Name>Christian Rivera</Name>\n        <Title>Senior Web Developer</Title>\n      </header>\n      <footer>\n        <Icons />\n      </footer>\n    </Container>\n  );\n};\n\nconst AnimatedProfileCard: React.FC = () => {\n  const [animate, setAnimate] = React.useState(true);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      setAnimate(false);\n    }, 100);\n  }, []);\n\n  return (\n    <Transition in={animate} timeout={0}>\n      {state => {\n        return <ProfileCard state={state} />;\n      }}\n    </Transition>\n  );\n};\n\nexport default AnimatedProfileCard;\n","import React from 'react';\n\nimport Forest from '../components/Forest';\nimport Gradient from '../components/Gradient';\nimport ProfileCard from '../components/ProfileCard';\n\n// TODO: use react-transition-group to animate the 15 degree rotation for the card\n// NOTE: https://dev.to/terrierscript/styled-component--react-transition-group--very-simple-transition-jja\n\nconst Landing: React.FC = () => {\n  return (\n    <>\n      <Forest />\n      <Gradient />\n      <ProfileCard />\n    </>\n  );\n};\n\nexport default Landing;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/reset.css';\nimport Landing from './pages/Landing';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<Landing />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/forest-background.ec74f90b.jpg\";"],"sourceRoot":""}